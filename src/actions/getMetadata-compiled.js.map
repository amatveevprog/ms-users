{"version":3,"sources":["getMetadata.js"],"names":[],"mappings":";;AAAA,MAAM,UAAU,QAAQ,UAAR,CAAV;AACN,MAAM,OAAO,QAAQ,aAAR,CAAP;AACN,MAAM,QAAQ,QAAQ,eAAR,CAAR;;AAEN,OAAO,OAAP,GAAiB,SAAS,iBAAT,CAA2B,OAA3B,EAAoC;AACnD,QAAM,EAAE,QAAF,EAAY,QAAZ,EAAsB,MAAtB,KAAiC,OAAjC,CAD6C;;AAGnD,SAAO,QACJ,IADI,CACC,IADD,EACO,QADP,EAEJ,IAFI,CAEC,MAAM,QAAN,CAFD,CAGJ,IAHI,CAGC,gBAAgB,CAAC,YAAD,EAAe,QAAf,EAAyB,MAAzB,CAAhB,CAHD,CAIJ,MAJI,CAIG,MAAM,WAAN,CAJH,CAKJ,GALI,CAKA,QAAQ,MAAR,GAAiB,MAAM,QAAN,CAAe,QAAf,EAAyB,QAAzB,CAAjB,GAAsD,IAAtD,CALP,CAHmD;CAApC","file":"getMetadata-compiled.js","sourcesContent":["const Promise = require('bluebird');\nconst noop = require('lodash/noop');\nconst Users = require('../db/adapter');\n\nmodule.exports = function getMetadataAction(message) {\n  const { audience, username, fields } = message;\n\n  return Promise\n    .bind(this, username)\n    .then(Users.isExists)\n    .then(realUsername => [realUsername, audience, fields])\n    .spread(Users.getMetadata)\n    .tap(message.public ? Users.isPublic(username, audience) : noop);\n};\n"]}