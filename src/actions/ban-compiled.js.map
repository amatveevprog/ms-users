{"version":3,"sources":["ban.js"],"names":[],"mappings":";;;;AAAA,MAAM,UAAU,QAAQ,UAAR,CAAV;AACN,MAAM,QAAQ,QAAQ,eAAR,CAAR;;AAEN,SAAS,QAAT,CAAkB,EAAE,QAAF,EAAY,MAAZ,EAAoB,IAApB,EAA0B,QAA1B,EAAlB,EAAwD;AACtD,SAAO,MAAM,QAAN,CAAe;AACpB,YADoB;AAEpB,YAAQ,UAAU,EAAV;AACR,UAAM,QAAQ,EAAR;AACN,cAAU,YAAY,EAAZ;GAJL,CAAP,CADsD;CAAxD;;AASA,SAAS,UAAT,CAAoB,EAAE,QAAF,EAApB,EAAkC;AAChC,SAAO,MAAM,UAAN,CAAiB,EAAC,QAAD,EAAjB,CAAP,CADgC;CAAlC;;;;;;;AASA,OAAO,OAAP,GAAiB,SAAS,OAAT,CAAiB,IAAjB,EAAuB;AACtC,SAAO,QACJ,IADI,CACC,IADD,EACO,KAAK,QAAL,CADP,CAEJ,IAFI,CAEC,MAAM,QAAN,CAFD,CAGJ,IAHI,CAGC,yBAAkB,QAAM,WAAxB,CAHD,CAIJ,IAJI,CAIC,KAAK,GAAL,GAAW,QAAX,GAAsB,UAAtB,CAJR,CADsC;CAAvB","file":"ban-compiled.js","sourcesContent":["const Promise = require('bluebird');\nconst Users = require('../db/adapter');\n\nfunction lockUser({ username, reason, whom, remoteip }) {\n  return Users.lockUser({\n    username,\n    reason: reason || '',\n    whom: whom || '',\n    remoteip: remoteip || ''\n  })\n}\n\nfunction unlockUser({ username }) {\n  return Users.unlockUser({username});\n}\n\n/**\n * Bans/unbans existing user\n * @param  {Object} opts\n * @return {Promise}\n */\nmodule.exports = function banUser(opts) {\n  return Promise\n    .bind(this, opts.username)\n    .then(Users.isExists)\n    .then(username => ({ ...opts, username }))\n    .then(opts.ban ? lockUser : unlockUser);\n};\n"]}