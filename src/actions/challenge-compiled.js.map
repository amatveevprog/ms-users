{"version":3,"sources":["challenge.js"],"names":[],"mappings":";;AAAA,MAAM,UAAU,QAAQ,UAAR,CAAV;AACN,MAAM,SAAS,QAAQ,eAAR,CAAT;AACN,MAAM,iBAAiB,QAAQ,wBAAR,CAAjB;AACN,MAAM,QAAQ,QAAQ,eAAR,CAAR;;AAEN,OAAO,OAAP,GAAiB,SAAS,aAAT,CAAuB,OAAvB,EAAgC;AAC/C,QAAM,EAAE,QAAF,KAAe,OAAf;;;;;AADyC,SAMxC,QACJ,IADI,CACC,IADD,EACO,QADP,EAEJ,IAFI,CAEC,MAAM,OAAN,CAFD,CAGJ,GAHI,CAGA,MAAM,QAAN,CAHA,CAIJ,KAJI,CAIE,IAAI,OAAO,eAAP,CAAuB,GAA3B,EAAgC,CAAC,GAAE,QAAH,EAAY,kBAAZ,CAAhC,CAJF,EAKJ,WALI,CAKQ,EAAE,YAAY,GAAZ,EALV,EAK6B,QAL7B,EAMJ,IANI,CAMC,eAAe,IAAf,CANR,CAN+C;CAAhC","file":"challenge-compiled.js","sourcesContent":["const Promise = require('bluebird');\nconst Errors = require('common-errors');\nconst emailChallenge = require('../utils/send-email.js');\nconst Users = require('../db/adapter');\n\nmodule.exports = function sendChallenge(message) {\n  const { username } = message;\n\n  // TODO: record all attemps\n  // TODO: add metadata processing on successful email challenge\n\n  return Promise\n    .bind(this, username)\n    .then(Users.getUser)\n    .tap(Users.isActive)\n    .throw(new Errors.HttpStatusError(417, `${username} is already active`))\n    .catchReturn({ statusCode: 412 }, username)\n    .then(emailChallenge.send);\n};\n"]}